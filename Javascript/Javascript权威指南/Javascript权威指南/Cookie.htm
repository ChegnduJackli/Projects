<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title>Cookie 用法</title>
     <script src="../js/common.js" type="text/javascript"></script>
    
</head>

<body>
<div id="main"></div>
<div id="autoLogoffTimer">

</div>
<div id="autoLogoffDiv"></div>
</body>

 <script type = 'text/javascript' >
     //http: //www.cnblogs.com/xiaochaohuashengmi/archive/2010/06/13/1757658.html
     test();
     function test() {

         //cookie值中，而且使用此种方案还可以避免中文乱码的出现。例如： 
         //document.cookie="str="+escape("I love ajax"); 
         //相当于： 
         //document.cookie="str=I%20love%20ajax"; 

         document.cookie = "userId=828";
         document.cookie = "userName=hulk";
         var strCookie = document.cookie;
         //alert(strCookie); 
         //将多cookie切割为多个名/值对 
         var arrCookie = strCookie.split("; ");
         for (var i = 0; i < arrCookie.length; i++) {
             WriteLine("arrCookie[" + i + "]: " + arrCookie[i]);
             var arr = arrCookie[i].split("=");
             //找到名称为userId的cookie，并返回它的值
             for (var j = 0; j < arr.length; j++) {
                 WriteLine("arr[" + j + "]: " + arr[j]);
             }
         }
         //给cookie设置终止日期 
         //到现在为止，所有的cookie都是单会话cookie，即浏览器关闭后这些cookie将会丢失，事实上这些cookie仅仅是存储在内存中，而没有建立相应的硬盘文件。 
         //在实际开发中，cookie常常需要长期保存，例如保存用户登录的状态。这可以用下面的选项来实现： 
         //document.cookie="userId=828; expires=GMT_String"; 
         //其中GMT_String是以GMT格式表示的时间字符串，这条语句就是将userId这个cookie设置为 设置为10天后过期，可以这样实现： 
         //获取当前时间 
         var date = new Date();
         var expireDays = 10;
         //将date设置为10天以后的时间 
         date.setTime(date.getTime() + expireDays * 24 * 3600 * 1000);
         //将userId和userName两个cookie设置为10天后过期 
         document.cookie = "userId=828; userName=hulk; expire=" + date.toGMTString();

         //删除cookie 
         //为了删除一个cookie，可以将其过期时间设定为一个过去的时间，例如： 

         //获取当前时间 
         var date = new Date();

         //将date设置为过去的时间 
         date.setTime(date.getTime() - 10000);

         //将userId这个cookie删除 
         document.cookie = "userId=828; expire=" + date.toGMTString();

         //知道“escape()”方法是把字符串按 URL 编码方法来编码的，那我们只需要用一个“escape()”方法来处理输出到 Cookie 的值，用“unescape()”来处理从 Cookie 接收过来的值就万无一失了
     }

     function addCookie(name, value, expireHours) {
         var cookieString = name + "=" + escape(value);
         //判断是否设置过期时间 

         if (expireHours > 0) {
             var date = new Date();
             date.setTime(date.getTime + expireHours * 3600 * 1000);
             cookieString = cookieString + "; expire=" + date.toGMTString();
         }
         document.cookie = cookieString;
     } 



     //setTimeout(logoff, 6322);

     function logoff() {
         var counter = -1;
         if (getCookie('counter') == null || getCookie('counter') * 1 <= 0) {
             setCookie('counter', 180);
             counter = 180;
         } else {
             counter = getCookie('counter') * 1;
             counter--;
             delCookie('counter');
             setCookie('counter', counter);
         }
         document.getElementById('autoLogoffTimer').innerHTML = counter;
         document.getElementById('autoLogoffDiv').style.display = 'inline';
         // blinkAutoLogoff();
         if (counter <= 0) {
             delCookie('counter');
             document.getElementById('autoLogoffDiv').style.display = 'none';
             window.location.href = '../Common/DowntimePageInvoiceSubmission.aspx';
             return;
         }
         setTimeout(logoff, 1000);
     }

     function blinkAutoLogoff() {
         if (document.getElementById('autoLogoffHeader').className == 'autoLogoffHeader')
             document.getElementById('autoLogoffHeader').className = 'autoLogoffHeaderBlink';
         else document.getElementById('autoLogoffHeader').className = 'autoLogoffHeader';
         if (document.getElementById('autoLogoff').className == 'autoLogoff')
             document.getElementById('autoLogoff').className = 'autoLogoffBlink';
         else document.getElementById('autoLogoff').className = 'autoLogoff';
     }
     //为了删除一个cookie，可以将其过期时间设定为一个过去的时间
     function delCookie(name) {
         var exp = new Date();
         exp.setTime(exp.getTime() - 1);
         var cval = getCookie(name);
         document.cookie = name + '=' + cval + '; expires=' + exp.toGMTString();
     }

     function setCookie(name, value) {
         document.cookie = name + '=' + escape(value) + ';path = /';
     }

     function getCookieVal(offset) {
         var endstr = document.cookie.indexOf(';', offset);
         if (endstr == -1)
             endstr = document.cookie.length;
         return unescape(document.cookie.substring(offset, endstr));
     }

     function getCookie(name) {
         var arg = name + '=';
         var alen = arg.length;
         var clen = document.cookie.length;
         var i = 0;
         while (i < clen) {
             var j = i + alen;
             if (document.cookie.substring(i, j) == arg) return getCookieVal(j);
             i = document.cookie.indexOf(' ', i) + 1;
             if (i == 0) break;
         }
         return null;
     }
    </script>

</html>

